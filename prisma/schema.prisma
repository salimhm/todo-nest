// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
    provider      = "prisma-client-js"
    // output   = "../generated/prisma",
    binaryTargets = ["native", "debian-openssl-3.0.x"]
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model User {
    id            Int              @id @default(autoincrement())
    firstName     String
    lastName      String
    email         String           @unique
    password      String
    bio           String?
    avatar        String?
    phone         String?
    createdAt     DateTime         @default(now())
    RefreshTokens RefreshToken[]
    preferences   UserPreferences?
    Todo          Todo[]
}

model UserPreferences {
    id            Int     @id @default(autoincrement())
    userId        Int     @unique
    user          User    @relation(fields: [userId], references: [id])
    theme         String  @default("light")
    language      String  @default("en")
    notifications Boolean @default(true)
}

model RefreshToken {
    id        Int      @id @default(autoincrement())
    token     String   @unique
    userId    Int
    user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
    isRevoked Boolean  @default(false)
    expiresAt DateTime
    createAt  DateTime @default(now())
}

model Todo {
    id          Int      @id @default(autoincrement())
    title       String
    description String?
    completed   Boolean  @default(false)
    createdAt   DateTime @default(now())
    updatedAt   DateTime @updatedAt
    userId      Int
    user        User     @relation(fields: [userId], references: [id])

    @@index([userId])
}
